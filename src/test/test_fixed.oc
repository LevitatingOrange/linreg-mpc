#include <obliv.oh>
#include "fixed.h"
#include "fixed.oh"
#include "test/test_fixed.h"


void test_fixed(void *v) {
	protocolIO *args = v;
	
	// check for equal length inputs
	bool equal;
	revealOblivBool(&equal, 
		feedOblivInt(args->len, 1) == 
		feedOblivInt(args->len, 2), 0);

	if(!equal) {
		args->len = -1;
		return;
	} 
	
	// compute the square root of the dot product of a and b
	obliv fixed32_t c;
	for(int i = 0; i < args->len; i++) {
		// assuming sizeof(int) == sizeof(fixed32_t)
		c += ofixed_mul(feedOblivInt(args->inputs[i], 1), 
				feedOblivInt(args->inputs[i], 2), args->p);
	}
	c = ofixed_sqrt(c, args->p);
	
	revealOblivInt(&(args->result), c, 0);
	args->gates = yaoGateCount();
}
